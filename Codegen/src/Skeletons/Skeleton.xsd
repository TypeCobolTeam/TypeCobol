<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Skeleton"
    targetNamespace="http://tempuri.org/Skeleton.xsd"
    elementFormDefault="qualified"
    xmlns="http://tempuri.org/Skeleton.xsd"
    xmlns:mstns="http://tempuri.org/Skeleton.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
>

  <!-- Enumeration Type of the action attribute in a pattern element-->
  <xs:simpleType name="ActionEnumType">
    <xs:restriction base="xs:string">
      <!-- Action to coment the original source code for this node-->
      <xs:enumeration value="comment"/>
      <!-- Action to create a New Generate Node-->
      <xs:enumeration value="create"/>
      <!-- Delete words in node input -->
      <xs:enumeration value="erase"/>
      <!-- The Expand action : Comment the node, remove all children generate code-->
      <xs:enumeration value="expand"/>
      <!-- Action to replace a Node by a new Generated one -->
      <xs:enumeration value="replace"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:element name="skeletons">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="skeleton">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="conditions">
                <xs:complexType>
                  <xs:sequence>
                    <!-- Condition that must satisfy the the node to match the skeleton -->
                    <xs:element name="condition">
                      <xs:complexType>
                        <!-- All attributes that represents dynamic variable in the Razor's @Model-->
                        <!-- Full name Type of the concerned Node-->
                        <xs:attribute name="node" type="xs:string" use="required"/>
                        <xs:attribute name="name" type="xs:string"/>
                        <xs:attribute name="level" type="xs:string"/>
                        <xs:attribute name="type" type="xs:string"/>
                        <xs:attribute name="sender" type=
                                      "xs:string"/>
                        <xs:attribute name="receiver" type="xs:string"/>
                        <xs:attribute name="unsafe" type="xs:string"/>
                        <xs:attribute name="function" type="xs:string"/>
                        <xs:attribute name="definitions" type="xs:string"/>
                        <xs:attribute name="variables" type="xs:string"/>
                        <xs:attribute name="typecobol" type="xs:string"/>
                        <xs:attribute name="visibility" type="xs:string"/>
                        <xs:attribute name="copyname" type="xs:string"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="patterns">
                <xs:complexType>
                  <xs:sequence>
                    <!-- Pattern <==> Template -->
                    <xs:element name="pattern">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <!-- Pattern identifier -->
                            <xs:attribute name="name" type="xs:string"/>
                            <!-- Should code in pattern be generated more than once?-->
                            <!-- The value of this attribute is used to group actions having the same group to be generated in only once using the first matching action.-->
                            <xs:attribute name="group" type="xs:string"/>
                            <!-- The COBOL Paragraph where the generated code must be put -->
                            <xs:attribute name="location" type="xs:string"/>
                            <!-- Action to be performed with the source code -->
                            <xs:attribute name="action" type="ActionEnumType"/>
                            <!-- Variables usable in the pattern-->
                            <xs:attribute name="var" type="xs:string"/>
                            <!-- Insertion position in a parent node -->
                            <xs:attribute name="position" type="xs:int"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>                      
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
         </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>    
</xs:schema>
