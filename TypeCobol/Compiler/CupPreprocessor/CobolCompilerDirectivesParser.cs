
//----------------------------------------------------
// The following code was generated by C# CUP v0.1
//----------------------------------------------------

namespace TypeCobol.Compiler.CupPreprocessor
 {

using TypeCobol.Compiler.Directives;
using TypeCobol.Compiler.Scanner;
using TypeCobol.Compiler.CupCommon;
using System.Collections.Generic;
using System;
using TUVienna.CS_CUP.Runtime;
using CSCupRuntime;

/** C# CUP v0.1 generated parser.
  */
public class CobolCompilerDirectivesParser : TUVienna.CS_CUP.Runtime.lr_parser {

  /** Default constructor. */
  public CobolCompilerDirectivesParser():base() {;}

  /** Constructor which sets the default scanner. */
  public CobolCompilerDirectivesParser(TUVienna.CS_CUP.Runtime.Scanner s): base(s) {;}

  /** Production table. */
  protected static readonly short[][] _production_table = 
new short[231][] {
	new short[2]{0,2},
	new short[2]{28,1},
	new short[2]{4,1},
	new short[2]{4,1},
	new short[2]{4,1},
	new short[2]{5,1},
	new short[2]{5,1},
	new short[2]{5,1},
	new short[2]{5,1},
	new short[2]{22,1},
	new short[2]{24,1},
	new short[2]{24,1},
	new short[2]{49,1},
	new short[2]{123,1},
	new short[2]{124,1},
	new short[2]{105,1},
	new short[2]{105,1},
	new short[2]{125,1},
	new short[2]{125,3},
	new short[2]{129,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{172,1},
	new short[2]{132,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{133,1},
	new short[2]{175,0},
	new short[2]{176,0},
	new short[2]{134,4},
	new short[2]{135,2},
	new short[2]{135,2},
	new short[2]{136,0},
	new short[2]{136,1},
	new short[2]{138,1},
	new short[2]{138,3},
	new short[2]{140,0},
	new short[2]{140,1},
	new short[2]{140,2},
	new short[2]{139,0},
	new short[2]{139,1},
	new short[2]{139,2},
	new short[2]{137,1},
	new short[2]{177,0},
	new short[2]{137,5},
	new short[2]{141,1},
	new short[2]{141,2},
	new short[2]{178,0},
	new short[2]{142,2},
	new short[2]{179,0},
	new short[2]{142,2},
	new short[2]{143,0},
	new short[2]{143,1},
	new short[2]{180,0},
	new short[2]{144,4},
	new short[2]{181,0},
	new short[2]{182,0},
	new short[2]{145,5},
	new short[2]{146,2},
	new short[2]{146,3},
	new short[2]{147,0},
	new short[2]{183,0},
	new short[2]{147,3},
	new short[2]{174,1},
	new short[2]{174,1},
	new short[2]{148,3},
	new short[2]{148,4},
	new short[2]{149,1},
	new short[2]{149,1},
	new short[2]{184,0},
	new short[2]{150,4},
	new short[2]{185,0},
	new short[2]{152,3},
	new short[2]{186,0},
	new short[2]{153,2},
	new short[2]{187,0},
	new short[2]{153,3},
	new short[2]{188,0},
	new short[2]{154,2},
	new short[2]{189,0},
	new short[2]{190,0},
	new short[2]{155,6},
	new short[2]{156,1},
	new short[2]{157,0},
	new short[2]{157,1},
	new short[2]{158,1},
	new short[2]{158,1},
	new short[2]{173,1},
	new short[2]{173,1},
	new short[2]{191,0},
	new short[2]{192,0},
	new short[2]{159,8},
	new short[2]{193,0},
	new short[2]{194,0},
	new short[2]{160,4},
	new short[2]{161,1},
	new short[2]{195,0},
	new short[2]{162,2},
	new short[2]{196,0},
	new short[2]{162,2},
	new short[2]{197,0},
	new short[2]{163,4},
	new short[2]{198,0},
	new short[2]{164,2},
	new short[2]{199,0},
	new short[2]{165,4},
	new short[2]{200,0},
	new short[2]{201,0},
	new short[2]{165,5},
	new short[2]{166,3},
	new short[2]{166,4},
	new short[2]{202,0},
	new short[2]{167,3},
	new short[2]{203,0},
	new short[2]{204,0},
	new short[2]{168,5},
	new short[2]{205,0},
	new short[2]{169,2},
	new short[2]{206,0},
	new short[2]{169,2},
	new short[2]{207,0},
	new short[2]{169,2},
	new short[2]{170,1},
	new short[2]{208,0},
	new short[2]{209,0},
	new short[2]{171,4}
};

  /** Access to production table. */
  public override short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static readonly short[][] _action_table = 
new short[173][] {
	new short[42]{45,-155,46,-153,47,-133,48,25,49,27,50,-177,51,-183,52,-185,54,-198,55,19,56,-202,57,-204,58,-208,59,4,60,-222,61,-224,62,-226,63,-229,107,10,108,6,-1,0},
	new short[4]{0,-117,-1,0},
	new short[4]{63,166,-1,0},
	new short[6]{323,-217,385,-219,-1,0},
	new short[4]{0,-122,-1,0},
	new short[4]{42,-192,-1,0},
	new short[4]{0,-129,-1,0},
	new short[4]{0,-124,-1,0},
	new short[4]{47,157,-1,0},
	new short[4]{42,-191,-1,0},
	new short[4]{56,156,-1,0},
	new short[4]{57,155,-1,0},
	new short[4]{58,154,-1,0},
	new short[4]{0,-120,-1,0},
	new short[4]{0,-121,-1,0},
	new short[4]{45,153,-1,0},
	new short[4]{50,147,-1,0},
	new short[4]{0,-125,-1,0},
	new short[6]{0,-138,44,128,-1,0},
	new short[4]{54,142,-1,0},
	new short[4]{429,139,-1,0},
	new short[4]{51,138,-1,0},
	new short[4]{0,-132,-1,0},
	new short[4]{46,137,-1,0},
	new short[6]{0,-138,44,128,-1,0},
	new short[4]{0,-127,-1,0},
	new short[10]{27,-161,28,-161,29,-161,44,-161,-1,0},
	new short[4]{0,-228,-1,0},
	new short[4]{52,114,-1,0},
	new short[4]{0,-119,-1,0},
	new short[4]{0,-118,-1,0},
	new short[4]{0,113,-1,0},
	new short[6]{16,-175,349,-212,-1,0},
	new short[4]{0,-123,-1,0},
	new short[4]{42,-195,-1,0},
	new short[4]{62,54,-1,0},
	new short[4]{44,-159,-1,0},
	new short[4]{0,-130,-1,0},
	new short[4]{0,-131,-1,0},
	new short[4]{0,-126,-1,0},
	new short[4]{0,-128,-1,0},
	new short[4]{60,45,-1,0},
	new short[4]{61,44,-1,0},
	new short[4]{0,-225,-1,0},
	new short[4]{0,-223,-1,0},
	new short[4]{44,50,-1,0},
	new short[8]{0,-151,11,-151,44,-151,-1,0},
	new short[8]{0,-20,11,-20,44,-20,-1,0},
	new short[8]{0,-157,11,53,44,50,-1,0},
	new short[8]{0,-2,11,-2,44,-2,-1,0},
	new short[4]{0,-160,-1,0},
	new short[8]{0,-152,11,-152,44,-152,-1,0},
	new short[4]{0,-158,-1,0},
	new short[4]{0,-227,-1,0},
	new short[4]{42,56,-1,0},
	new short[4]{53,57,-1,0},
	new short[10]{27,67,28,64,29,65,44,61,-1,0},
	new short[6]{3,95,89,96,-1,0},
	new short[18]{0,-12,3,-12,11,-12,89,-12,309,-12,348,-12,389,-12,413,-12,-1,0},
	new short[18]{0,-13,3,-13,11,-13,89,-13,309,-13,348,-13,389,-13,413,-13,-1,0},
	new short[18]{0,-11,3,-11,11,-11,89,-11,309,-11,348,-11,389,-11,413,-11,-1,0},
	new short[18]{0,-14,3,-14,11,-14,89,-14,309,-14,348,-14,389,-14,413,-14,-1,0},
	new short[16]{3,-18,11,-18,89,-18,309,91,348,90,389,-18,413,-18,-1,0},
	new short[18]{0,-4,3,-4,11,-4,89,-4,309,-4,348,-4,389,-4,413,-4,-1,0},
	new short[18]{0,-5,3,-5,11,-5,89,-5,309,-5,348,-5,389,-5,413,-5,-1,0},
	new short[12]{3,-166,11,-166,89,-166,389,-167,413,70,-1,0},
	new short[18]{0,-3,3,-3,11,-3,89,-3,309,-3,348,-3,389,-3,413,-3,-1,0},
	new short[4]{389,72,-1,0},
	new short[8]{3,-164,11,-164,89,-164,-1,0},
	new short[10]{3,-166,11,-166,89,-166,389,-167,-1,0},
	new short[8]{3,-165,11,-165,89,-165,-1,0},
	new short[6]{4,73,16,-175,-1,0},
	new short[16]{3,-174,4,-174,5,-174,11,-174,16,-174,89,-174,236,-174,-1,0},
	new short[16]{3,-173,4,-173,5,-173,11,-173,16,-173,89,-173,236,-173,-1,0},
	new short[12]{3,-168,4,73,11,-168,16,-175,89,-168,-1,0},
	new short[4]{16,82,-1,0},
	new short[6]{5,79,236,80,-1,0},
	new short[6]{4,73,16,-175,-1,0},
	new short[6]{4,-170,16,-170,-1,0},
	new short[6]{4,-169,16,-169,-1,0},
	new short[12]{3,-171,4,-171,11,-171,16,-171,89,-171,-1,0},
	new short[6]{2,84,16,-145,-1,0},
	new short[6]{2,86,16,85,-1,0},
	new short[6]{2,-146,16,-146,-1,0},
	new short[16]{3,-176,4,-176,5,-176,11,-176,16,-176,89,-176,236,-176,-1,0},
	new short[6]{2,-147,16,-147,-1,0},
	new short[6]{5,79,236,80,-1,0},
	new short[6]{4,73,16,-175,-1,0},
	new short[12]{3,-172,4,-172,11,-172,16,-172,89,-172,-1,0},
	new short[10]{27,-17,28,-17,29,-17,44,-17,-1,0},
	new short[10]{27,-16,28,-16,29,-16,44,-16,-1,0},
	new short[10]{27,67,28,64,29,65,44,61,-1,0},
	new short[12]{3,-15,11,-15,89,-15,389,-15,413,-15,-1,0},
	new short[12]{3,-19,11,-19,89,-19,389,-19,413,-19,-1,0},
	new short[4]{11,-194,-1,0},
	new short[4]{11,-193,-1,0},
	new short[4]{11,-196,-1,0},
	new short[4]{11,99,-1,0},
	new short[4]{0,-197,-1,0},
	new short[4]{236,111,-1,0},
	new short[4]{349,108,-1,0},
	new short[6]{11,-210,16,-175,-1,0},
	new short[4]{236,106,-1,0},
	new short[4]{11,105,-1,0},
	new short[4]{0,-211,-1,0},
	new short[4]{16,-175,-1,0},
	new short[6]{11,-216,16,-216,-1,0},
	new short[4]{11,-213,-1,0},
	new short[4]{11,110,-1,0},
	new short[4]{0,-214,-1,0},
	new short[4]{16,-175,-1,0},
	new short[6]{11,-215,16,-215,-1,0},
	new short[4]{0,-1,-1,0},
	new short[4]{44,116,-1,0},
	new short[6]{11,-189,44,118,-1,0},
	new short[6]{11,-188,44,-188,-1,0},
	new short[4]{11,-186,-1,0},
	new short[4]{11,-190,-1,0},
	new short[4]{11,120,-1,0},
	new short[4]{0,-187,-1,0},
	new short[10]{27,67,28,64,29,65,44,61,-1,0},
	new short[4]{11,-162,-1,0},
	new short[4]{11,124,-1,0},
	new short[4]{0,-163,-1,0},
	new short[4]{0,-136,-1,0},
	new short[6]{0,-140,7,-140,-1,0},
	new short[6]{0,-139,7,135,-1,0},
	new short[8]{0,-148,7,-148,14,-149,-1,0},
	new short[4]{14,130,-1,0},
	new short[6]{2,132,15,-142,-1,0},
	new short[6]{2,134,15,133,-1,0},
	new short[6]{2,-143,15,-143,-1,0},
	new short[6]{0,-150,7,-150,-1,0},
	new short[6]{2,-144,15,-144,-1,0},
	new short[4]{44,128,-1,0},
	new short[6]{0,-141,7,-141,-1,0},
	new short[4]{44,-154,-1,0},
	new short[4]{0,-184,-1,0},
	new short[4]{11,-206,-1,0},
	new short[4]{11,141,-1,0},
	new short[4]{0,-207,-1,0},
	new short[4]{34,-199,-1,0},
	new short[4]{34,145,-1,0},
	new short[4]{0,-200,-1,0},
	new short[4]{0,-201,-1,0},
	new short[4]{0,-137,-1,0},
	new short[4]{34,-179,-1,0},
	new short[4]{34,152,-1,0},
	new short[6]{0,-178,34,-181,-1,0},
	new short[4]{34,151,-1,0},
	new short[6]{0,-182,34,-182,-1,0},
	new short[6]{0,-180,34,-180,-1,0},
	new short[4]{44,-156,-1,0},
	new short[6]{16,-209,349,-209,-1,0},
	new short[4]{429,-205,-1,0},
	new short[4]{429,-203,-1,0},
	new short[10]{27,-134,28,-134,29,-134,44,-134,-1,0},
	new short[10]{27,67,28,64,29,65,44,61,-1,0},
	new short[4]{0,-135,-1,0},
	new short[4]{323,165,-1,0},
	new short[4]{385,162,-1,0},
	new short[4]{44,-220,-1,0},
	new short[4]{44,164,-1,0},
	new short[4]{0,-221,-1,0},
	new short[4]{0,-218,-1,0},
	new short[14]{27,-230,28,-230,29,-230,30,-230,31,-230,32,-230,-1,0},
	new short[14]{27,67,28,64,29,65,30,169,31,173,32,172,-1,0},
	new short[4]{0,-231,-1,0},
	new short[4]{0,-8,-1,0},
	new short[4]{0,-10,-1,0},
	new short[4]{0,-6,-1,0},
	new short[4]{0,-7,-1,0},
	new short[4]{0,-9,-1,0}
};

  /** Access to parse-action table. */
  public override short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static readonly short[][] _reduce_table = 
new short[173][] {
	new short[74]{132,31,133,1,134,30,135,29,142,36,144,13,145,14,152,4,154,33,155,7,158,34,159,17,160,39,162,20,163,25,164,32,165,40,167,6,168,37,169,27,170,38,171,22,175,8,178,23,179,15,185,16,188,21,189,28,193,19,195,10,196,11,198,12,205,41,206,42,207,35,208,2,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{202,159,203,160,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[8]{136,145,137,125,138,126,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[8]{136,124,137,125,138,126,-1,-1},
	new short[2]{-1,-1},
	new short[4]{181,120,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[10]{150,99,166,101,184,75,200,100,-1,-1},
	new short[2]{-1,-1},
	new short[4]{191,54,-1,-1},
	new short[2]{-1,-1},
	new short[4]{180,45,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[8]{28,47,129,46,141,48,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[8]{28,47,129,51,143,50,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[14]{4,58,24,59,49,61,123,62,125,65,146,57,-1,-1},
	new short[4]{173,96,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{105,91,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{147,68,183,67,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{147,70,183,67,-1,-1},
	new short[2]{-1,-1},
	new short[10]{148,74,149,76,150,73,184,75,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[8]{149,86,150,73,184,75,-1,-1},
	new short[2]{-1,-1},
	new short[4]{174,77,-1,-1},
	new short[8]{149,80,150,73,184,75,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{139,82,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{174,87,-1,-1},
	new short[8]{149,88,150,73,184,75,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[10]{4,58,24,59,49,92,124,93,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{192,97,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[8]{150,102,184,75,199,103,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{150,106,184,75,-1,-1},
	new short[2]{-1,-1},
	new short[4]{201,108,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{150,111,184,75,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{156,114,-1,-1},
	new short[4]{157,116,-1,-1},
	new short[2]{-1,-1},
	new short[4]{190,118,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[14]{4,58,24,59,49,61,123,62,125,65,146,121,-1,-1},
	new short[4]{182,122,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{177,128,-1,-1},
	new short[2]{-1,-1},
	new short[4]{140,130,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{137,135,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{197,139,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{194,142,-1,-1},
	new short[4]{161,143,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{153,148,186,147,-1,-1},
	new short[2]{-1,-1},
	new short[4]{187,149,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{176,157,-1,-1},
	new short[10]{4,58,24,59,49,61,123,158,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{204,162,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[4]{209,166,-1,-1},
	new short[8]{4,170,5,169,22,167,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1}
};

  /** Access to <code>reduce_goto</code> table. */
  public override short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP_CobolCompilerDirectivesParser_actions action_obj;

  /** Action encapsulation object initializer. */
  protected override void init_actions()
    {
      action_obj = new CUP_CobolCompilerDirectivesParser_actions(this);
    }

  /** Invoke a user supplied parse action. */
  public override TUVienna.CS_CUP.Runtime.Symbol do_action(
    int                        act_num,
    TUVienna.CS_CUP.Runtime.lr_parser parser,
    StackList<Symbol>            CUP_parser_stack,
    int                        top)
  {
    /* call code in generated class */
    return action_obj.CUP_CobolCompilerDirectivesParser_do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public override int start_state() {return 0;}
  /** Indicates start production. */
  public override int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public override int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public override int error_sym() {return 1;}



	// The Compiler Directive Builder instance.
	public ICompilerDirectiveBuilder Builder
	{
		get;
		set;
	}
	// The Error Reporter instance
	public ICupParserErrorReporter ErrorReporter
	{
		get;
		set;
	}

	// Test wheither or not this parser is a trial parser
	public bool IsTrial
	{
		get;
		set;
	}

  // get the current state of the parser.
  public int getParserState() 
  {
	return stack.Peek().parse_state;	
  }

  //get the parser stack.
  public StackList<Symbol> getParserStack() 
  {
	return stack;	
  }

  public override void report_fatal_error(
    string   message, 
    object   info)
	{
		if(ErrorReporter != null) {
			if (ErrorReporter.ReportFatalError(this, getParserStack(), message, info))
			{
				return;
			}
		}
		base.report_fatal_error(message, info);
	}

	public override void report_error(string message, object info)
	{
		if(ErrorReporter != null) {
			if (ErrorReporter.ReportError(this, getParserStack(), message, info))
			{
				return;
			}
		}
		base.report_error(message, info);
	}

	public override void syntax_error(Symbol cur_token)
	{
		if(ErrorReporter != null) {
			if (ErrorReporter.SyntaxError(this, getParserStack(), cur_token))
			{
				return;
			}
		}
		base.syntax_error(cur_token);
	}

	public override void unrecovered_syntax_error(Symbol cur_token)
	{
		if(ErrorReporter != null) {
			if (ErrorReporter.UnrecoveredSyntaxError(this, getParserStack(), cur_token))
			{
				return;
			}
		}
		base.unrecovered_syntax_error(cur_token);
	}

	public void ReportScannerDirectiveError()
	{
		ErrorReporter.SyntaxError(this, getParserStack(), ((CobolWordsTokenizer)getScanner()).LastStopSymbol);
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
public class CUP_CobolCompilerDirectivesParser_actions {



  private CobolCompilerDirectivesParser my_parser;

  /** Constructor */
  public CUP_CobolCompilerDirectivesParser_actions(CobolCompilerDirectivesParser t_parser) {
    this.my_parser = t_parser;
  }

  /** Method with the actual generated action code. */
  public   TUVienna.CS_CUP.Runtime.Symbol CUP_CobolCompilerDirectivesParser_do_action(
    int                        CUP_CobolCompilerDirectivesParser_act_num,
    TUVienna.CS_CUP.Runtime.lr_parser CUP_CobolCompilerDirectivesParser_parser,
    StackList<Symbol>            xstack1,
    int                        CUP_CobolCompilerDirectivesParser_top)
    {
      /* Symbol object for return from actions */
      StackList<Symbol> CUP_CobolCompilerDirectivesParser_stack =  xstack1;
      TUVienna.CS_CUP.Runtime.Symbol CUP_CobolCompilerDirectivesParser_result;

      /* select the action based on the action number */
      switch (CUP_CobolCompilerDirectivesParser_act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // titleCompilerStatement ::= NT$33 TITLE NT$34 alphanumericValue2 
            {
              object RESULT = null;
              // propagate RESULT from NT$33
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
              // propagate RESULT from NT$34
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token a = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 		
		my_parser.Builder.EnterTitleCompilerStatement(t, a);
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(171/*titleCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // NT$34 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).ConsumeNextTokenOnTheSameLineAndStop(TokenType.PeriodSeparator);  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(209/*NT$34*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // NT$33 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartTitleCompilerStatement(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(208/*NT$33*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // skipCompilerStatement ::= skipTokens 
            {
              object RESULT = null;
		Token t = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 		
		my_parser.Builder.EnterSkipCompilerStatement(t);
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(170/*skipCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // skipTokens ::= NT$32 SKIP3 
            {
              Token RESULT = null;
              // propagate RESULT from NT$32
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(169/*skipTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // NT$32 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartSkipCompilerStatement(CompilerDirectiveType.SKIP3); 
	((CobolWordsTokenizer)my_parser.getScanner()).ConsumeNextTokenOnTheSameLineAndStop(TokenType.PeriodSeparator);  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(207/*NT$32*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // skipTokens ::= NT$31 SKIP2 
            {
              Token RESULT = null;
              // propagate RESULT from NT$31
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(169/*skipTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // NT$31 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartSkipCompilerStatement(CompilerDirectiveType.SKIP2); 
	((CobolWordsTokenizer)my_parser.getScanner()).ConsumeNextTokenOnTheSameLineAndStop(TokenType.PeriodSeparator);  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(206/*NT$31*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // skipTokens ::= NT$30 SKIP1 
            {
              Token RESULT = null;
              // propagate RESULT from NT$30
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(169/*skipTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // NT$30 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartSkipCompilerStatement(CompilerDirectiveType.SKIP1); 
	((CobolWordsTokenizer)my_parser.getScanner()).ConsumeNextTokenOnTheSameLineAndStop(TokenType.PeriodSeparator); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(205/*NT$30*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // serviceReloadCompilerStatement ::= SERVICE_CD NT$28 RELOAD NT$29 UserDefinedWord 
            {
              object RESULT = null;
              // propagate RESULT from NT$28
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
              // propagate RESULT from NT$29
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token s = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-4)).value;
		TypeCobol.Compiler.Scanner.Token l = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token w = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterServiceReloadCompilerStatement(s, l, w); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(168/*serviceReloadCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // NT$29 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token s = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token l = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(204/*NT$29*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // NT$28 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token s = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 my_parser.Builder.StartServiceReloadCompilerStatement(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(203/*NT$28*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // serviceLabelCompilerStatement ::= SERVICE_CD NT$27 LABEL 
            {
              object RESULT = null;
              // propagate RESULT from NT$27
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token s = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token l = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterServiceLabelCompilerStatement(s, l); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(167/*serviceLabelCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // NT$27 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token s = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 
		my_parser.Builder.StartServiceLabelCompilerStatement();
		((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(202/*NT$27*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // pseudoTextReplaces ::= pseudoTextReplaces pseudoText BY pseudoText 
            {
              PairTokenListList RESULT = null;
		PairTokenListList replaces = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		TokenList from = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TokenList by = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 replaces.Add(new Tuple<List<Token>, List<Token>>(from,by)); RESULT = replaces; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(166/*pseudoTextReplaces*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // pseudoTextReplaces ::= pseudoText BY pseudoText 
            {
              PairTokenListList RESULT = null;
		TokenList from = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TokenList by = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new PairTokenListList() {new Tuple<List<Token>, List<Token>>(from,by)}; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(166/*pseudoTextReplaces*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // replaceCompilerStatement ::= replaceToken NT$25 OFF NT$26 PeriodSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$25
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
              // propagate RESULT from NT$26
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		Token r = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-4)).value;
		TypeCobol.Compiler.Scanner.Token o = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		 my_parser.Builder.EnterReplaceCompilerStatement(r, o, null); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(165/*replaceCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // NT$26 ::= 
            {
              object RESULT = null;
		Token r = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token o = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(201/*NT$26*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // NT$25 ::= 
            {
              object RESULT = null;
		Token r = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 my_parser.Builder.StartReplaceCompilerStatement(CompilerDirectiveType.REPLACE_OFF); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(200/*NT$25*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // replaceCompilerStatement ::= replaceToken pseudoTextReplaces NT$24 PeriodSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$24
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		Token r = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		PairTokenListList replaces = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		 my_parser.Builder.EnterReplaceCompilerStatement(r, null, replaces); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(165/*replaceCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // NT$24 ::= 
            {
              object RESULT = null;
		Token r = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		PairTokenListList replaces = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 		
		((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode();
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(199/*NT$24*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // replaceToken ::= NT$23 REPLACE 
            {
              Token RESULT = null;
              // propagate RESULT from NT$23
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token r = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 
		RESULT = r;
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(164/*replaceToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // NT$23 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartReplaceCompilerStatement(CompilerDirectiveType.REPLACE); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(198/*NT$23*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // readyOrResetTraceCompilerStatement ::= readyOrReset TRACE NT$22 PeriodSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$22
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		Token rt = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		 my_parser.Builder.EnterReadyOrResetTraceCompilerStatement(rt); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(163/*readyOrResetTraceCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // NT$22 ::= 
            {
              object RESULT = null;
		Token rt = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(197/*NT$22*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // readyOrReset ::= NT$21 RESET 
            {
              Token RESULT = null;
              // propagate RESULT from NT$21
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(162/*readyOrReset*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // NT$21 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartReadyOrResetTraceCompilerStatement(CompilerDirectiveType.RESET_TRACE);  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(196/*NT$21*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // readyOrReset ::= NT$20 READY 
            {
              Token RESULT = null;
              // propagate RESULT from NT$20
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(162/*readyOrReset*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // NT$20 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartReadyOrResetTraceCompilerStatement(CompilerDirectiveType.READY_TRACE);  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(195/*NT$20*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // sequenceNumber ::= IntegerLiteral 
            {
              Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token il = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = il; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(161/*sequenceNumber*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // insertCompilerStatement ::= NT$18 INSERT NT$19 sequenceNumber 
            {
              object RESULT = null;
              // propagate RESULT from NT$18
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
              // propagate RESULT from NT$19
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token tins = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		Token sn = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterInsertCompilerStatement(tins,sn); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(160/*insertCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // NT$19 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token tins = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(194/*NT$19*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // NT$18 ::= 
            {
              object RESULT = null;
 
		my_parser.Builder.StartInsertCompilerStatement(); 		
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(193/*NT$18*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // execSqlIncludeStatement ::= execToken NT$16 ExecTranslatorName EXEC_SQL copyCompilerStatementBody end_exec NT$17 PeriodSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$16
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-6)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-6)).value;
              // propagate RESULT from NT$17
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		Token t = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-7)).value;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(159/*execSqlIncludeStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // NT$17 ::= 
            {
              object RESULT = null;
		Token t = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-5)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(192/*NT$17*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // NT$16 ::= 
            {
              object RESULT = null;
		Token t = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 my_parser.Builder.EnterExecSqlIncludeStatement(t); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(191/*NT$16*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // end_exec ::= CUP_END_EXEC_PERIOD_SEPARATOR 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(173/*end_exec*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // end_exec ::= END_EXEC 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(173/*end_exec*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // execToken ::= EXECUTE 
            {
              Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(158/*execToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // execToken ::= EXEC 
            {
              Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(158/*execToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // routineName ::= UserDefinedWord 
            {
              Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token w = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = w; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(157/*routineName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // routineName ::= 
            {
              Token RESULT = null;
		 RESULT = null; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(157/*routineName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // languageName ::= UserDefinedWord 
            {
              Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token w = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = w; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(156/*languageName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // enterCompilerStatement ::= NT$14 ENTER languageName routineName NT$15 PeriodSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$14
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-5)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-5)).value;
              // propagate RESULT from NT$15
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token e = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-4)).value;
		Token ln = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		Token rn = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		 my_parser.Builder.EnterEnterCompilerStatement(e, ln, rn); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(155/*enterCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // NT$15 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token e = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		Token ln = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		Token rn = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(190/*NT$15*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // NT$14 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartEnterCompilerStatement(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(189/*NT$14*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // ejectCompilerStatement ::= NT$13 EJECT 
            {
              object RESULT = null;
              // propagate RESULT from NT$13
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token e = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 		
		my_parser.Builder.EnterEjectCompilerStatement(e);
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(154/*ejectCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // NT$13 ::= 
            {
              object RESULT = null;
 
		my_parser.Builder.StartEjectCompilerStatement();  
		((CobolWordsTokenizer)my_parser.getScanner()).ConsumeNextTokenOnTheSameLineAndStop(TokenType.PeriodSeparator); 
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(188/*NT$13*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // deleteSequenceNumberField ::= deleteSequenceNumberField NT$12 IntegerLiteral 
            {
              TokenList RESULT = null;
              // propagate RESULT from NT$12
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (TokenList) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TokenList snf = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token il = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 snf.Add(il); RESULT = snf; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(153/*deleteSequenceNumberField*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // NT$12 ::= 
            {
              object RESULT = null;
		TokenList snf = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningModeIfNextNotToken(TokenType.IntegerLiteral); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(187/*NT$12*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // deleteSequenceNumberField ::= NT$11 IntegerLiteral 
            {
              TokenList RESULT = null;
              // propagate RESULT from NT$11
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (TokenList) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token il = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new TokenList() {il}; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(153/*deleteSequenceNumberField*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // NT$11 ::= 
            {
              object RESULT = null;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningModeIfNextNotToken(TokenType.IntegerLiteral); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(186/*NT$11*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // deleteCompilerStatement ::= NT$10 DELETE_CD deleteSequenceNumberField 
            {
              object RESULT = null;
              // propagate RESULT from NT$10
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TokenList fields = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterDeleteCompilerStatement(t); my_parser.Builder.EnterSequenceNumberField(fields); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(152/*deleteCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // NT$10 ::= 
            {
              object RESULT = null;
 my_parser.Builder.StartDeleteCompilerStatement();  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(185/*NT$10*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // pseudoText ::= NT$9 PseudoTextDelimiter anyTokens PseudoTextDelimiter 
            {
              TokenList RESULT = null;
              // propagate RESULT from NT$9
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (TokenList) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		TokenList tokens = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		 RESULT = tokens; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(150/*pseudoText*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // NT$9 ::= 
            {
              object RESULT = null;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterPseudoTextAnyTokenMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(184/*NT$9*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // copyReplacingOperand ::= CUP_LiteralOrUserDefinedWordOReservedWordExceptCopy 
            {
              TokenList RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new TokenList(){t}; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(149/*copyReplacingOperand*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // copyReplacingOperand ::= pseudoText 
            {
              TokenList RESULT = null;
		TokenList tokens = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = tokens; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(149/*copyReplacingOperand*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // copyReplacingOperands ::= copyReplacingOperands copyReplacingOperand replacing_by copyReplacingOperand 
            {
              PairTokenListList RESULT = null;
		PairTokenListList operands = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		TokenList from = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TokenList by = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 operands.Add(new Tuple<List<Token>, List<Token>>(from,by)); RESULT = operands; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(148/*copyReplacingOperands*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // copyReplacingOperands ::= copyReplacingOperand replacing_by copyReplacingOperand 
            {
              PairTokenListList RESULT = null;
		TokenList from = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TokenList by = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new PairTokenListList() {new Tuple<List<Token>, List<Token>>(from,by)}; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(148/*copyReplacingOperands*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // replacing_by ::= CUP_PSEUDO_TEXT_DELIMITER_BY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(174/*replacing_by*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // replacing_by ::= BY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(174/*replacing_by*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // replacingCopyReplacingOperandOpts ::= NT$8 REPLACING copyReplacingOperands 
            {
              PairTokenListList RESULT = null;
              // propagate RESULT from NT$8
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value != null )
                RESULT = (PairTokenListList) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		PairTokenListList operands = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = operands; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(147/*replacingCopyReplacingOperandOpts*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // NT$8 ::= 
            {
              object RESULT = null;
 ((CobolWordsTokenizer)my_parser.getScanner()).CheckLiteralOrUserDefinedWordOReservedWordExceptCopy = true; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(183/*NT$8*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // replacingCopyReplacingOperandOpts ::= 
            {
              PairTokenListList RESULT = null;
		 RESULT = null; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(147/*replacingCopyReplacingOperandOpts*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // copyCompilerStatementBody ::= qualifiedTextName SUPPRESS replacingCopyReplacingOperandOpts 
            {
              object RESULT = null;
		TypeCobol.Compiler.CupCommon.QualifiedTextName name = (TypeCobol.Compiler.CupCommon.QualifiedTextName)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token s = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		PairTokenListList operands = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterCopyCompilerStatementBody(name, s, operands); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(146/*copyCompilerStatementBody*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // copyCompilerStatementBody ::= qualifiedTextName replacingCopyReplacingOperandOpts 
            {
              object RESULT = null;
		TypeCobol.Compiler.CupCommon.QualifiedTextName name = (TypeCobol.Compiler.CupCommon.QualifiedTextName)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		PairTokenListList operands = (PairTokenListList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterCopyCompilerStatementBody(name, null, operands); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(146/*copyCompilerStatementBody*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // copyCompilerStatement ::= COPY NT$6 copyCompilerStatementBody NT$7 PeriodSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$6
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
              // propagate RESULT from NT$7
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token c = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-4)).value;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(145/*copyCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // NT$7 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token c = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(182/*NT$7*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // NT$6 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token c = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 my_parser.Builder.EnterCopyCompilerStatement(c); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(181/*NT$6*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // controlCblCompilerStatement ::= asteriskControlCbl NT$5 controlCblOptions periodSeparatorOpt 
            {
              object RESULT = null;
              // propagate RESULT from NT$5
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		Token t = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
		 my_parser.Builder.EnterControlCblCompilerStatement(t); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(144/*controlCblCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // NT$5 ::= 
            {
              object RESULT = null;
		Token t = (Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterControlCblCompilerStatementMode();  
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(180/*NT$5*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // periodSeparatorOpt ::= PeriodSeparator 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(143/*periodSeparatorOpt*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // periodSeparatorOpt ::= 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(143/*periodSeparatorOpt*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // asteriskControlCbl ::= NT$4 ASTERISK_CBL 
            {
              Token RESULT = null;
              // propagate RESULT from NT$4
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 
	RESULT = t; 

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(142/*asteriskControlCbl*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // NT$4 ::= 
            {
              object RESULT = null;
 
	my_parser.Builder.StartControlCblCompilerStatement(CompilerDirectiveType.ASTERISK_CBL); 	

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(179/*NT$4*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // asteriskControlCbl ::= NT$3 ASTERISK_CONTROL 
            {
              Token RESULT = null;
              // propagate RESULT from NT$3
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (Token) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 
	RESULT = t; 

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(142/*asteriskControlCbl*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // NT$3 ::= 
            {
              object RESULT = null;
 
	my_parser.Builder.StartControlCblCompilerStatement(CompilerDirectiveType.ASTERISK_CONTROL); 	

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(178/*NT$3*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // controlCblOptions ::= controlCblOptions controlCblOption 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token o = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterControlCblOption(o); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(141/*controlCblOptions*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // controlCblOptions ::= controlCblOption 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token o = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterControlCblOption(o); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(141/*controlCblOptions*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // compilerOption ::= UserDefinedWord NT$2 LeftParenthesisSeparator skipAnyTokens RightParenthesisSeparator 
            {
              object RESULT = null;
              // propagate RESULT from NT$2
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(137/*compilerOption*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // NT$2 ::= 
            {
              object RESULT = null;
 ((CobolWordsTokenizer)my_parser.getScanner()).EnterAnyTokenMode(TokenType.RightParenthesisSeparator); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(177/*NT$2*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // compilerOption ::= UserDefinedWord 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(137/*compilerOption*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // anyTokens ::= anyTokens CUP_ANY_TOKEN 
            {
              TokenList RESULT = null;
		TokenList tokens = (TokenList)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 tokens.Add(t); RESULT = tokens; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(139/*anyTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // anyTokens ::= CUP_ANY_TOKEN 
            {
              TokenList RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new TokenList(); RESULT.Add(t); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(139/*anyTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // anyTokens ::= 
            {
              TokenList RESULT = null;
		 RESULT = new TokenList(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(139/*anyTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // skipAnyTokens ::= skipAnyTokens CUP_ANY_TOKEN 
            {
              TokenList RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(140/*skipAnyTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // skipAnyTokens ::= CUP_ANY_TOKEN 
            {
              TokenList RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(140/*skipAnyTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // skipAnyTokens ::= 
            {
              TokenList RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(140/*skipAnyTokens*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // compilerOptions ::= compilerOptions CommaSeparator compilerOption 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(138/*compilerOptions*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // compilerOptions ::= compilerOption 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(138/*compilerOptions*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // optionsList ::= compilerOptions 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(136/*optionsList*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // optionsList ::= 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(136/*optionsList*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // cblProcessCompilerStatement ::= PROCESS optionsList 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(135/*cblProcessCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // cblProcessCompilerStatement ::= CBL optionsList 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(135/*cblProcessCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // basisCompilerStatement ::= NT$0 BASIS NT$1 textName 
            {
              object RESULT = null;
              // propagate RESULT from NT$0
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-3)).value;
              // propagate RESULT from NT$1
              if ( (CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value != null )
                RESULT = (object) ( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token n = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 my_parser.Builder.EnterBasisCompilerStatement(n); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(134/*basisCompilerStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // NT$1 ::= 
            {
              object RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
 		
		((CobolWordsTokenizer)my_parser.getScanner()).EnterStopScanningMode(); 
    
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(176/*NT$1*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // NT$0 ::= 
            {
              object RESULT = null;
 		
		my_parser.Builder.StartBasisCompilerStatement();
	
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(175/*NT$0*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // compilerDirectingStatement ::= titleCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // compilerDirectingStatement ::= skipCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // compilerDirectingStatement ::= serviceReloadCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // compilerDirectingStatement ::= serviceLabelCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // compilerDirectingStatement ::= replaceCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // compilerDirectingStatement ::= readyOrResetTraceCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // compilerDirectingStatement ::= insertCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // compilerDirectingStatement ::= execSqlIncludeStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // compilerDirectingStatement ::= enterCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // compilerDirectingStatement ::= ejectCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // compilerDirectingStatement ::= deleteCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // compilerDirectingStatement ::= copyCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // compilerDirectingStatement ::= controlCblCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // compilerDirectingStatement ::= cblProcessCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // compilerDirectingStatement ::= basisCompilerStatement 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(133/*compilerDirectingStatement*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // starts ::= compilerDirectingStatement 
            {
              object RESULT = null;
		 ((CobolWordsTokenizer)my_parser.getScanner()).LeaveStopScanningMode(); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(132/*starts*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // codeElementStartingKeyword ::= XML 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // codeElementStartingKeyword ::= WRITE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // codeElementStartingKeyword ::= WORKING_STORAGE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // codeElementStartingKeyword ::= WHEN 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // codeElementStartingKeyword ::= USE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // codeElementStartingKeyword ::= UNSTRING 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // codeElementStartingKeyword ::= SUBTRACT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // codeElementStartingKeyword ::= STRING 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // codeElementStartingKeyword ::= STOP 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // codeElementStartingKeyword ::= START 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // codeElementStartingKeyword ::= SPECIAL_NAMES 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // codeElementStartingKeyword ::= SOURCE_COMPUTER 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // codeElementStartingKeyword ::= SORT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // codeElementStartingKeyword ::= SET 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // codeElementStartingKeyword ::= SERVICE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // codeElementStartingKeyword ::= SELECT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // codeElementStartingKeyword ::= SEARCH 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // codeElementStartingKeyword ::= SD 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // codeElementStartingKeyword ::= SAME 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // codeElementStartingKeyword ::= REWRITE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // codeElementStartingKeyword ::= RETURN 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // codeElementStartingKeyword ::= RERUN 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // codeElementStartingKeyword ::= REPOSITORY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // codeElementStartingKeyword ::= RELEASE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // codeElementStartingKeyword ::= READ 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // codeElementStartingKeyword ::= PROCEDURE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // codeElementStartingKeyword ::= PERFORM 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // codeElementStartingKeyword ::= OPEN 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // codeElementStartingKeyword ::= OBJECT_COMPUTER 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // codeElementStartingKeyword ::= NEXT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // codeElementStartingKeyword ::= MULTIPLY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // codeElementStartingKeyword ::= MULTIPLE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // codeElementStartingKeyword ::= MOVE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // codeElementStartingKeyword ::= MERGE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // codeElementStartingKeyword ::= LOCAL_STORAGE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // codeElementStartingKeyword ::= LINKAGE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // codeElementStartingKeyword ::= INVOKE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // codeElementStartingKeyword ::= INSPECT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // codeElementStartingKeyword ::= INPUT_OUTPUT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // codeElementStartingKeyword ::= INITIALIZE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // codeElementStartingKeyword ::= IF 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // codeElementStartingKeyword ::= IDENTIFICATION 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // codeElementStartingKeyword ::= ID 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // codeElementStartingKeyword ::= I_O_CONTROL 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // codeElementStartingKeyword ::= GOBACK 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // codeElementStartingKeyword ::= GO 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // codeElementStartingKeyword ::= FREE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // codeElementStartingKeyword ::= FILE_CONTROL 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // codeElementStartingKeyword ::= FILE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // codeElementStartingKeyword ::= FD 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // codeElementStartingKeyword ::= EXIT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // codeElementStartingKeyword ::= EXECUTE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // codeElementStartingKeyword ::= EXEC 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // codeElementStartingKeyword ::= EVALUATE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // codeElementStartingKeyword ::= ENVIRONMENT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // codeElementStartingKeyword ::= ENTRY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // codeElementStartingKeyword ::= END_XML 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // codeElementStartingKeyword ::= END_WRITE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // codeElementStartingKeyword ::= END_UNSTRING 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // codeElementStartingKeyword ::= END_SUBTRACT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // codeElementStartingKeyword ::= END_STRING 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // codeElementStartingKeyword ::= END_START 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // codeElementStartingKeyword ::= END_SEARCH 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // codeElementStartingKeyword ::= END_REWRITE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // codeElementStartingKeyword ::= END_RETURN 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // codeElementStartingKeyword ::= END_READ 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // codeElementStartingKeyword ::= END_PERFORM 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // codeElementStartingKeyword ::= END_MULTIPLY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // codeElementStartingKeyword ::= END_INVOKE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // codeElementStartingKeyword ::= END_IF 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // codeElementStartingKeyword ::= END_EXEC 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // codeElementStartingKeyword ::= END_EVALUATE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // codeElementStartingKeyword ::= END_DIVIDE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // codeElementStartingKeyword ::= END_DELETE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // codeElementStartingKeyword ::= END_DECLARE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // codeElementStartingKeyword ::= END_COMPUTE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // codeElementStartingKeyword ::= END_CALL 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // codeElementStartingKeyword ::= END_ADD 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // codeElementStartingKeyword ::= END 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // codeElementStartingKeyword ::= ELSE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // codeElementStartingKeyword ::= DIVIDE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // codeElementStartingKeyword ::= DISPLAY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // codeElementStartingKeyword ::= DELETE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // codeElementStartingKeyword ::= DECLARE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // codeElementStartingKeyword ::= DECLARATIVES 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // codeElementStartingKeyword ::= DATA 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // codeElementStartingKeyword ::= CONTINUE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // codeElementStartingKeyword ::= CONFIGURATION 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // codeElementStartingKeyword ::= COMPUTE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // codeElementStartingKeyword ::= CLOSE 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // codeElementStartingKeyword ::= CANCEL 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // codeElementStartingKeyword ::= CALL 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // codeElementStartingKeyword ::= APPLY 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // codeElementStartingKeyword ::= ALTER 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // codeElementStartingKeyword ::= ADD 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // codeElementStartingKeyword ::= ACCEPT 
            {
              object RESULT = null;

              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(172/*codeElementStartingKeyword*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // controlCblOption ::= enumeratedValue1 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token v = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = v; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(129/*controlCblOption*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // qualifiedTextName ::= textName in_of libraryName 
            {
              TypeCobol.Compiler.CupCommon.QualifiedTextName RESULT = null;
		TypeCobol.Compiler.Scanner.Token n = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-2)).value;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		TypeCobol.Compiler.Scanner.Token ln = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new QualifiedTextName(n, t, ln); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(125/*qualifiedTextName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // qualifiedTextName ::= textName 
            {
              TypeCobol.Compiler.CupCommon.QualifiedTextName RESULT = null;
		TypeCobol.Compiler.Scanner.Token n = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = new QualifiedTextName(n); 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(125/*qualifiedTextName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // in_of ::= OF 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(105/*in_of*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // in_of ::= IN 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token t = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = t; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(105/*in_of*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // libraryName ::= externalName5 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token n = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = n; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(124/*libraryName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // textName ::= externalName5 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token n = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = n; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(123/*textName*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // externalName5 ::= alphanumericValue5 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token v = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = v; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(49/*externalName5*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // alphanumericValue5 ::= alphanumericLiteralToken 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token v = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = v; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(24/*alphanumericValue5*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // alphanumericValue5 ::= UserDefinedWord 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token v = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = v; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(24/*alphanumericValue5*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // alphanumericValue2 ::= alphanumericOrNationalLiteralToken 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token v = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = v; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(22/*alphanumericValue2*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // alphanumericOrNationalLiteralToken ::= HexadecimalNationalLiteral 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*alphanumericOrNationalLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // alphanumericOrNationalLiteralToken ::= NationalLiteral 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*alphanumericOrNationalLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // alphanumericOrNationalLiteralToken ::= DBCSLiteral 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*alphanumericOrNationalLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // alphanumericOrNationalLiteralToken ::= alphanumericLiteralToken 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(5/*alphanumericOrNationalLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // alphanumericLiteralToken ::= NullTerminatedAlphanumericLiteral 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*alphanumericLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // alphanumericLiteralToken ::= HexadecimalAlphanumericLiteral 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*alphanumericLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // alphanumericLiteralToken ::= AlphanumericLiteral 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token lit = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = lit; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*alphanumericLiteralToken*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // enumeratedValue1 ::= UserDefinedWord 
            {
              TypeCobol.Compiler.Scanner.Token RESULT = null;
		TypeCobol.Compiler.Scanner.Token v = (TypeCobol.Compiler.Scanner.Token)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top)).value;
		 RESULT = v; 
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(28/*enumeratedValue1*/, RESULT);
            }
          return CUP_CobolCompilerDirectivesParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= starts EOF 
            {
              object RESULT = null;
		object start_val = (object)( CUP_CobolCompilerDirectivesParser_stack.ElementAtFromBottom(CUP_CobolCompilerDirectivesParser_top-1)).value;
		RESULT = start_val;
              CUP_CobolCompilerDirectivesParser_result = new TUVienna.CS_CUP.Runtime.Symbol(0/*$START*/, RESULT);
            }
          /* ACCEPT */
          CUP_CobolCompilerDirectivesParser_parser.done_parsing();
          return CUP_CobolCompilerDirectivesParser_result;

          /* . . . . . .*/
          default:
            throw new System.Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

}
