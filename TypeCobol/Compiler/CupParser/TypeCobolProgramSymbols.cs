
//----------------------------------------------------
// The following code was generated by C# CUP v0.1
//----------------------------------------------------

namespace TypeCobol.Compiler.CupParser
 {

/** CUP generated class containing symbol constants. */
public class TypeCobolProgramSymbols {
  /* terminals */
  public const int DataRenamesEntry = 32;
  public const int DeleteStatement = 48;
  public const int MoveStatement = 64;
  public const int FunctionDeclarationEnd = 124;
  public const int PerformProcedureStatement = 68;
  public const int FactoryEnd = 8;
  public const int ReadStatementEnd = 112;
  public const int ReturnStatementEnd = 113;
  public const int WhenSearchCondition = 101;
  public const int LocalStorageSectionHeader = 23;
  public const int SectionHeader = 18;
  public const int ObjectComputerParagraph = 37;
  public const int MethodIdentification = 11;
  public const int LinkageSectionHeader = 24;
  public const int WorkingStorageSectionHeader = 22;
  public const int ReleaseStatement = 71;
  public const int WhenCondition = 99;
  public const int XmlGenerateStatement = 84;
  public const int NotOnExceptionCondition = 91;
  public const int AtEndCondition = 86;
  public const int ExecStatement = 53;
  public const int AddStatement = 41;
  public const int StringStatement = 79;
  public const int EnvironmentDivisionHeader = 13;
  public const int CallStatementEnd = 103;
  public const int StatementEntryPoint = 2;
  public const int DataRedefinesEntry = 31;
  public const int NotInvalidKeyCondition = 95;
  public const int EvaluateStatementEnd = 107;
  public const int InspectStatement = 61;
  public const int SpecialNamesParagraph = 38;
  public const int MethodEnd = 12;
  public const int WhenOtherCondition = 100;
  public const int CallStatement = 43;
  public const int AddStatementEnd = 102;
  public const int UseStatement = 82;
  public const int PerformStatementEnd = 111;
  public const int InvokeStatementEnd = 109;
  public const int IfStatementEnd = 108;
  public const int CancelStatement = 44;
  public const int ParagraphHeader = 25;
  public const int SubtractStatement = 80;
  public const int CloseStatement = 45;
  public const int StartStatementEnd = 116;
  public const int ConfigurationSectionHeader = 19;
  public const int IOControlParagraphHeader = 27;
  public const int OnExceptionCondition = 90;
  public const int ObjectEnd = 10;
  public const int StopStatement = 78;
  public const int InvalidKeyCondition = 94;
  public const int error = 1;
  public const int SentenceEnd = 28;
  public const int InputOutputSectionHeader = 20;
  public const int FileControlParagraphHeader = 26;
  public const int WriteStatementEnd = 120;
  public const int RewriteStatement = 73;
  public const int AtEndOfPageCondition = 88;
  public const int DisplayStatement = 49;
  public const int SubtractStatementEnd = 118;
  public const int DeleteStatementEnd = 105;
  public const int MultiplyStatementEnd = 110;
  public const int ClassIdentification = 5;
  public const int OpenStatement = 67;
  public const int ClassEnd = 6;
  public const int XmlStatementEnd = 121;
  public const int NextSentenceStatement = 66;
  public const int ExitProgramStatement = 55;
  public const int InvokeStatement = 62;
  public const int FileControlEntry = 34;
  public const int IOControlEntry = 35;
  public const int ProcedureStyleCall = 125;
  public const int GlobalStorageSectionHeader = 126;
  public const int DeclarativesHeader = 16;
  public const int EvaluateStatement = 52;
  public const int WriteStatement = 83;
  public const int UnstringStatement = 81;
  public const int UnstringStatementEnd = 119;
  public const int SourceComputerParagraph = 36;
  public const int FactoryIdentification = 7;
  public const int PerformStatement = 69;
  public const int MergeStatement = 63;
  public const int FunctionDeclarationHeader = 123;
  public const int InitializeStatement = 60;
  public const int ComputeStatementEnd = 104;
  public const int ObjectIdentification = 9;
  public const int LibraryCopy = 122;
  public const int ProgramEnd = 4;
  public const int SortStatement = 76;
  public const int FileDescriptionEntry = 29;
  public const int DataDescriptionEntry = 30;
  public const int MultiplyStatement = 65;
  public const int GobackStatement = 57;
  public const int SetStatement = 75;
  public const int NotAtEndCondition = 87;
  public const int OnOverflowCondition = 92;
  public const int AcceptStatement = 40;
  public const int ProgramIdentification = 3;
  public const int DeclarativesEnd = 17;
  public const int DivideStatementEnd = 106;
  public const int ElseCondition = 98;
  public const int RepositoryParagraph = 39;
  public const int DataDivisionHeader = 14;
  public const int StartStatement = 77;
  public const int XmlParseStatement = 85;
  public const int EntryStatement = 51;
  public const int ProcedureDivisionHeader = 15;
  public const int OnSizeErrorCondition = 96;
  public const int SearchStatementEnd = 115;
  public const int ContinueStatement = 47;
  public const int FileSectionHeader = 21;
  public const int GotoStatement = 58;
  public const int NotOnOverflowCondition = 93;
  public const int ExitMethodStatement = 54;
  public const int RewriteStatementEnd = 114;
  public const int ComputeStatement = 46;
  public const int Program = 127;
  public const int SearchStatement = 74;
  public const int DivideStatement = 50;
  public const int NotOnSizeErrorCondition = 97;
  public const int StringStatementEnd = 117;
  public const int ReturnStatement = 72;
  public const int IfStatement = 59;
  public const int ExitStatement = 56;
  public const int EOF = 0;
  public const int DataConditionEntry = 33;
  public const int AlterStatement = 42;
  public const int NotAtEndOfPageCondition = 89;
  public const int ReadStatement = 70;
	}
}
