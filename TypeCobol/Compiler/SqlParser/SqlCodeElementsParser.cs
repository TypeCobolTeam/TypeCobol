
//----------------------------------------------------
// The following code was generated by C# CUP v0.1
//----------------------------------------------------

namespace TypeCobol.Compiler.SqlParser
 {

using TypeCobol.Compiler.CodeElements;
using TypeCobol.Compiler.SqlCodeElements;
using TypeCobol.Compiler.SqlScanner;
using System.Collections.Generic;
using System;
using TUVienna.CS_CUP.Runtime;
using CSCupRuntime;

/** C# CUP v0.1 generated parser.
  */
public class SqlCodeElementsParser : TUVienna.CS_CUP.Runtime.lr_parser {

  /** Default constructor. */
  public SqlCodeElementsParser():base() {;}

  /** Constructor which sets the default scanner. */
  public SqlCodeElementsParser(TUVienna.CS_CUP.Runtime.Scanner s): base(s) {;}

  /** Production table. */
  protected static readonly short[][] _production_table = 
new short[9][] {
	new short[2]{0,2},
	new short[2]{1,1},
	new short[2]{2,4},
	new short[2]{3,0},
	new short[2]{3,1},
	new short[2]{3,1},
	new short[2]{3,2},
	new short[2]{3,2},
	new short[2]{4,1}
};

  /** Access to production table. */
  public override short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static readonly short[][] _action_table = 
new short[13][] {
	new short[4]{2,2,-1,0},
	new short[4]{3,6,-1,0},
	new short[4]{0,5,-1,0},
	new short[4]{0,-2,-1,0},
	new short[4]{0,-1,-1,0},
	new short[8]{1,9,5,-4,6,10,-1,0},
	new short[8]{1,-6,5,-6,6,-6,-1,0},
	new short[8]{1,13,5,12,6,10,-1,0},
	new short[8]{1,-5,5,-5,6,-5,-1,0},
	new short[8]{1,-9,5,-9,6,-9,-1,0},
	new short[8]{1,-7,5,-7,6,-7,-1,0},
	new short[4]{0,-3,-1,0},
	new short[8]{1,-8,5,-8,6,-8,-1,0}
};

  /** Access to parse-action table. */
  public override short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static readonly short[][] _reduce_table = 
new short[13][] {
	new short[6]{1,2,2,3,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[6]{3,7,4,6,-1,-1},
	new short[2]{-1,-1},
	new short[4]{4,10,-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1},
	new short[2]{-1,-1}
};

  /** Access to <code>reduce_goto</code> table. */
  public override short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP_SqlCodeElementsParser_actions action_obj;

  /** Action encapsulation object initializer. */
  protected override void init_actions()
    {
      action_obj = new CUP_SqlCodeElementsParser_actions(this);
    }

  /** Invoke a user supplied parse action. */
  public override TUVienna.CS_CUP.Runtime.Symbol do_action(
    int                        act_num,
    TUVienna.CS_CUP.Runtime.lr_parser parser,
    StackList<Symbol>            CUP_parser_stack,
    int                        top)
  {
    /* call code in generated class */
    return action_obj.CUP_SqlCodeElementsParser_do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public override int start_state() {return 0;}
  /** Indicates start production. */
  public override int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public override int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public override int error_sym() {return 1;}



	// The Sql Code Element Class Builder instance.
	public ISqlCodeElementBuilder Builder
	{
		get;
		set;
	}

	public IList<CodeElement> SqlCodeElements
	{
		get;
		internal set;
	}

}

/** Cup generated class to encapsulate user supplied action code.*/
public class CUP_SqlCodeElementsParser_actions {



  private SqlCodeElementsParser my_parser;

  /** Constructor */
  public CUP_SqlCodeElementsParser_actions(SqlCodeElementsParser t_parser) {
    this.my_parser = t_parser;
  }

  /** Method with the actual generated action code. */
  public   TUVienna.CS_CUP.Runtime.Symbol CUP_SqlCodeElementsParser_do_action(
    int                        CUP_SqlCodeElementsParser_act_num,
    TUVienna.CS_CUP.Runtime.lr_parser CUP_SqlCodeElementsParser_parser,
    StackList<Symbol>            xstack1,
    int                        CUP_SqlCodeElementsParser_top)
    {
      /* Symbol object for return from actions */
      StackList<Symbol> CUP_SqlCodeElementsParser_stack =  xstack1;
      TUVienna.CS_CUP.Runtime.Symbol CUP_SqlCodeElementsParser_result;

      /* select the action based on the action number */
      switch (CUP_SqlCodeElementsParser_act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // SqlCodeElement ::= COMMIT 
            {
              CodeElement RESULT = null;
		SqlToken commit = (SqlToken)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top)).value;
		  RESULT = my_parser.Builder?.CreateCommitStatement(commit); 
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(4/*SqlCodeElement*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // SqlCodeElements ::= SqlCodeElements error 
            {
              System.Collections.IList RESULT = null;
		System.Collections.IList codeElements = (System.Collections.IList)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top-1)).value;
		 
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*SqlCodeElements*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // SqlCodeElements ::= SqlCodeElements SqlCodeElement 
            {
              System.Collections.IList RESULT = null;
		System.Collections.IList codeElements = (System.Collections.IList)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top-1)).value;
		CodeElement codeElement = (CodeElement)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top)).value;
		 RESULT = codeElements; codeElements.Add(codeElement); 
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*SqlCodeElements*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // SqlCodeElements ::= SqlCodeElement 
            {
              System.Collections.IList RESULT = null;
		CodeElement codeElement = (CodeElement)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top)).value;
		 RESULT = new List<CodeElement>(){codeElement}; 
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*SqlCodeElements*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // SqlCodeElements ::= error 
            {
              System.Collections.IList RESULT = null;
		 
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*SqlCodeElements*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // SqlCodeElements ::= 
            {
              System.Collections.IList RESULT = null;
		 RESULT = new List<CodeElement>(); 
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(3/*SqlCodeElements*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ExecSql ::= EXEC SQL SqlCodeElements END_EXEC 
            {
              object RESULT = null;
		System.Collections.IList codeElements = (System.Collections.IList)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top-1)).value;
		 
	my_parser.SqlCodeElements = (List<CodeElement>)codeElements;

              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(2/*ExecSql*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // starts ::= ExecSql 
            {
              object RESULT = null;

              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(1/*starts*/, RESULT);
            }
          return CUP_SqlCodeElementsParser_result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= starts EOF 
            {
              object RESULT = null;
		object start_val = (object)( CUP_SqlCodeElementsParser_stack.ElementAtFromBottom(CUP_SqlCodeElementsParser_top-1)).value;
		RESULT = start_val;
              CUP_SqlCodeElementsParser_result = new TUVienna.CS_CUP.Runtime.Symbol(0/*$START*/, RESULT);
            }
          /* ACCEPT */
          CUP_SqlCodeElementsParser_parser.done_parsing();
          return CUP_SqlCodeElementsParser_result;

          /* . . . . . .*/
          default:
            throw new System.Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

}
