       IDENTIFICATION DIVISION.
       PROGRAM-ID. IndexTesting.
       DATA DIVISION.
       WORKING-STORAGE SECTION.

       01 MyGIdx.
           05 Counter pic 9.
           05 MyGIdxTab occurs 99 depending on Counter of MyGIdx
                             indexed by MyIdxCustom.      
      
       01 MyIdxType TYPEDEF STRICT.
         02 MyGIdx2.
           05 Counter pic 9.
           05 MyGIdxTab occurs 99 depending on Counter 
                             indexed by MyIdxCustom.
      
       01 MyFinalIdxVar type MyIdxType.
      

       01 Var1.
           05 Tab3 occurs 99 indexed by MyIdx3azeazeazeazeazeazeazeaz.
       01 MyVar. COPY YCONVEA.

       01 Var2.
           05 Dup1 occurs 99 indexed by MyIdxsdfsdfzezerzerzerzerzerz.
           05 Dup2 occurs 99 indexed by MyIdxsdfsdfzezerzerzerzerzerz.

       01 Account TYPEDEF STRICT.
           05 Holders      pic X(30)
                           OCCURS 99 INDEXED BY Idx.

       01 BadType TYPEDEF STRICT.
          05 BadVar pic x(2) occurs 5 indexed by BadIdx.
          05 BadVar2 pic x(2) occurs 5 indexed by BadIdx.
        
       01 Account1 type Account.
       01 Bad        TYPE BadType.

       01 myPointerGroup.
        05 myPointer pointer.

       01 strVar Pic x(15) value "string sample".

      *OK : Index Name is over 22 characters 
      *- but not duplicated and not inside TypeDef
       01 ToLingIndx PIC X(6) OCCURS 5 
       INDEXED BY ThisIndexNameIsClearlyToLong.

       01 IndexType TYPEDEF STRICT.
      *KO Index is over 22 chars and decared in Typedef
            05 someVar pic x(2) occurs 5
            indexed by ThisIndexNameIsClearlyToLong2.

       PROCEDURE DIVISION.

      *OK : Qualified Index works
       SET Account1::Holders::Idx TO 1.

      *KO : Qualified Index with OF
       SET Idx OF Holders OF Account1 TO 1.

      *KO : BadIdx is duplicated inside TypeDef
       SET BadIdx TO 1.
      *KO Use qualification for an imported index
       SET MyVar::MyIdx TO 1.
      *KO use qualification with index over 22chars
       SET Tab3::MyIdx3azeazeazeazeazeazeazeaz       to 1.

      *KO increment pointer and no pointer variables
       SET myPointer,Account1,Bad UP BY 1.
      *KO increment can only be performed by integer variables
       SET myPointerGroup::myPointer UP BY strVar.

       SET myPointer Down BY ((MyFinalIdxVar::Counter)**2).

       END PROGRAM IndexTesting.