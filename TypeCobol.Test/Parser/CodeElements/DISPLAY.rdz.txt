--- Diagnostics ---
Line 6[23,24] <27, Error, Syntax> - Syntax error : mismatched input 'no' expecting {alphanumeric literal, numeric literal, symbol, special register, figurative constant, keyword} RuleStack=codeElement>displayStatement,  OffendingSymbol=[23,24:no]<NO>
Line 16[55,58] <27, Error, Syntax> - Syntax error : extraneous input 'toto' expecting {separator, numeric literal, character string, symbol, statement starting keyword, keyword, Formalized Comments elements, Sql statement starting keyword} RuleStack=,  OffendingSymbol=[55,58:toto]<UserDefinedWord>
--- Code Elements ---
[[DisplayStatement]] [15,21:Display]<DISPLAY> --> [23,26:toto]<UserDefinedWord>
- variables = toto

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [23,28+:"toto"]<AlphanumericLiteral>(",Y,Y){toto}
- variables = "toto"

[[DisplayStatement]] [15,21:Display]<DISPLAY> --> [23,28+:'toto']<AlphanumericLiteral>(',Y,Y){toto}
- variables = 'toto'

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [33,41:advancing]<ADVANCING>
- variables = "toto"
- WithNoAdvancing

[[DisplayStatement]] [15,21:DISPLAY]<DISPLAY> --> [56,58+:'.']<AlphanumericLiteral>(',Y,Y){.}
- variables = '*** WHATEVER *** : ' DEBUG-ITEM '.'

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [44,52:advancing]<ADVANCING>
- variables =

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [46,54:advancing]<ADVANCING>
- variables = "no advancing"
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [46,54:advancing]<ADVANCING>
- variables = 'no advancing'
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [48,56:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [59,67:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- OutputDeviceName = SYSIN
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [54,62:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- OutputDeviceName = SYSIN
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [58,66:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- OutputDeviceName = toto
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [53,61:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- OutputDeviceName = toto
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [23,36+:"C'est à dire"]<AlphanumericLiteral>(",Y,Y){C'est à dire}
- variables = "C'est à dire"

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [23,36+:'C"est à dire']<AlphanumericLiteral>(',Y,Y){C"est à dire}
- variables = 'C"est à dire'

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [49,53:SYSIN]<UserDefinedWord>
- variables = var1 'litError' var2
- OutputDeviceName = SYSIN

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [58,66:advancing]<ADVANCING>
- variables = var1 'lit2' var2
- OutputDeviceName = var2
- WithNoAdvancing

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [23,35:when-compiled]<WHEN_COMPILED>
- variables = when-compiled

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [39,39:)]<RightParenthesisSeparator>
- variables = max

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [46,51:mycopy]<UserDefinedWord>
- variables = toto toto mycopy.toto

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [23,32:high-value]<HIGH_VALUE>
- variables = high-value

[[DisplayStatement]] [15,21:display]<DISPLAY> --> [23,28:spaces]<SPACES>
- variables = spaces

