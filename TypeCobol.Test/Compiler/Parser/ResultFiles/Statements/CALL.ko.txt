--- Diagnostics ---
Line 4[1,4] <27, Error, Syntax> - Syntax error : mismatched input 'CALL' expecting {alphanumeric literal, numeric literal, symbol, special register, figurative constant, keyword} RuleStack=codeElement>callStatement>cobolCallStatement,  OffendingSymbol=[1,4:CALL]<CALL>
Line 4[17,17] <27, Error, Syntax> - Syntax error : missing {CONTENT, REFERENCE, VALUE} at 'a' RuleStack=codeElement>callStatement>cobolCallStatement>callUsingParameters,  OffendingSymbol=[17,17:a]<UserDefinedWord>
Line 5[1,4] <27, Error, Syntax> - Syntax error : CALL .. RETURNING: Missing identifier RuleStack=codeElement>callStatement>cobolCallStatement,  OffendingSymbol=[1,4:CALL]<CALL>
Line 7[1,4] <27, Error, Syntax> - Syntax error : no viable alternative at input 'CALL' RuleStack=codeElement>callStatement>cobolCallStatement>callReturningParameter>sharedStorageArea1>identifier>storageAreaReferenceOrConditionReference,  OffendingSymbol=[1,4:CALL]<CALL>
Line 7[8,8] <27, Error, Syntax> - Syntax error : extraneous input 'g' expecting {separator, numeric literal, symbol, statement starting keyword, keyword, TypeCobol keyword} RuleStack=codeElement>callStatement>tcCallStatement>programNameOrProgramEntryOrProcedurePointerOrFunctionPointerVariable>identifier>storageAreaReferenceOrConditionReference>dataItemReferenceOrConditionReference,  OffendingSymbol=[8,8:g]<UserDefinedWord>
Line 8[20,20] <27, Error, Syntax> - Syntax error : extraneous input 'y' expecting {separator, numeric literal, symbol, statement starting keyword, keyword} RuleStack=codeElement>callStatement>cobolCallStatement>callReturningParameter>sharedStorageArea1>identifier>storageAreaReferenceOrConditionReference>dataItemReferenceOrConditionReference,  OffendingSymbol=[20,20:y]<UserDefinedWord>
Line 11[17,21] <27, Error, Syntax> - Syntax error : missing {CONTENT, REFERENCE, VALUE} at 'MALUS' RuleStack=codeElement>callStatement>cobolCallStatement>callUsingParameters,  OffendingSymbol=[17,21:MALUS]<UserDefinedWord>
Line 13[14,21] <27, Error, Syntax> - Syntax error : CALL .. USING: Illegal function identifier RuleStack=codeElement>callStatement>cobolCallStatement>callUsingParameters,  OffendingSymbol=[14,21:FUNCTION]<FUNCTION>
Line 14[14,19] <27, Error, Syntax> - Syntax error : CALL .. USING: Illegal LENGTH OF in BY REFERENCE phrase RuleStack=codeElement>callStatement>cobolCallStatement>callUsingParameters,  OffendingSymbol=[14,19:LENGTH]<LENGTH>
Line 15[14,27] <27, Error, Syntax> - Syntax error : CALL .. USING: Illegal LINAGE-COUNTER RuleStack=codeElement>callStatement>cobolCallStatement>callUsingParameters,  OffendingSymbol=[14,27:LINAGE-COUNTER]<LINAGE_COUNTER>
--- Code Elements ---
[[CallStatement]] [1,4:CALL]<CALL> --> [8,12:USING]<USING>

[[CallStatement]] [1,4:CALL]<CALL> --> [17,17:a]<UserDefinedWord>

[[CallStatement]] [1,4:CALL]<CALL> --> [16,24:RETURNING]<RETURNING>

[[ProcedureStyleCall]] [1,4:CALL]<CALL> --> [8,8:g]<UserDefinedWord>

[[CallStatement]] [1,4:CALL]<CALL> --> [20,20:y]<UserDefinedWord>

[[CallStatement]] [1,4:CALL]<CALL> --> [23,23:i]<UserDefinedWord>

[[CallStatement]] [1,4:CALL]<CALL> --> [23,23:z]<UserDefinedWord>

[[CallStatement]] [1,4:CALL]<CALL> --> [23,28:RANDOM]<IntrinsicFunctionName>

[[CallStatement]] [1,4:CALL]<CALL> --> [24,24:x]<UserDefinedWord>

[[CallStatement]] [1,4:CALL]<CALL> --> [32,32:x]<UserDefinedWord>

