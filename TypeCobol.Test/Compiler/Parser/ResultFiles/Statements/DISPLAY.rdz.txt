--- Diagnostics ---
[16,17]<27,Error,Syntax>Syntax error : Display: required <identifier> or <literal> (RuleStack=codeElement>statement>imperativeStatement>ioStatement>displayStatement>identifierOrLiteral, OffendingSymbol=[16,17:no]<NO> on line 6)
[16,17]<27,Error,Syntax>Syntax error : no viable alternative at input 'no' (RuleStack=codeElement>statement>imperativeStatement>ioStatement>displayStatement>identifierOrLiteral, OffendingSymbol=[16,17:no]<NO> on line 6)
[53,56]<27,Error,Syntax>Syntax error : no viable alternative at input 'toto ... with' (RuleStack=codeElement, OffendingSymbol=[53,56:with]<WITH> on line 16)
--- Code Elements ---
[[DisplayStatement]] [8,14:Display]<DISPLAY> --> [16,19:toto]<UserDefinedWord>
- variables = toto
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [16,21+:"toto"]<AlphanumericLiteral>(",Y,Y){toto}
- variables = "toto"
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:Display]<DISPLAY> --> [16,21+:'toto']<AlphanumericLiteral>(',Y,Y){toto}
- variables = 'toto'
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [26,34:advancing]<ADVANCING>
- variables = "toto"
- WithNoAdvancing = True

[[DisplayStatement]] [12,18:DISPLAY]<DISPLAY> --> [53,55+:'.']<AlphanumericLiteral>(',Y,Y){.}
- variables = '*** WHATEVER *** : ' DEBUG-ITEM '.'
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [37,45:advancing]<ADVANCING>
- variables =
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [39,47:advancing]<ADVANCING>
- variables = "no advancing"
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [39,47:advancing]<ADVANCING>
- variables = 'no advancing'
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [41,49:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [52,60:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- UponMnemonicOrEnvironmentName[Unknown] = SYSIN
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [47,55:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- UponMnemonicOrEnvironmentName[Unknown] = SYSIN
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [51,59:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- UponMnemonicOrEnvironmentName[Unknown] = toto
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [46,54:advancing]<ADVANCING>
- variables = var1 'lit1' var2
- UponMnemonicOrEnvironmentName[Unknown] = toto
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [16,29+:"C'est à dire"]<AlphanumericLiteral>(",Y,Y){C'est à dire}
- variables = "C'est à dire"
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [16,29+:'C"est à dire']<AlphanumericLiteral>(',Y,Y){C"est à dire}
- variables = 'C"est à dire'
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [42,46:SYSIN]<UserDefinedWord>
- variables = var1 'litError' var2
- UponMnemonicOrEnvironmentName[Unknown] = SYSIN
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [51,59:advancing]<ADVANCING>
- variables = var1 'lit2' var2
- UponMnemonicOrEnvironmentName[Unknown] = var2
- WithNoAdvancing = True

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [16,28:when-compiled]<WHEN_COMPILED>
- variables = when-compiled
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [32,32:)]<RightParenthesisSeparator>
- variables = max( 1, 5)
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [39,44:mycopy]<UserDefinedWord>
- variables = toto toto mycopy.toto
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [16,25:high-value]<HIGH_VALUE>
- variables = high-value
- WithNoAdvancing = False

[[DisplayStatement]] [8,14:display]<DISPLAY> --> [16,21:spaces]<SPACES>
- variables = spaces
- WithNoAdvancing = False

